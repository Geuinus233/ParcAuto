<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAd
        hQAAHYUB8Bsy7AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOESURBVHhe7Zq5
        qxUxGMWPuONWihuIpYq9lYWCCmqnjZ3YuG+gdiKCdlpYqahgaSO4/wPaWvgeYiMuKGLlvm8cyINwSGYy
        9365N3OZHxy4vPm+nCSTTBYFOjo6OspjMYA9AO4CeALgoxN/3wGwG8AiTRoFFgK4AOAXgH81+gPgmssZ
        CTa7t6wNrdMHAJu0sLaxz71RbVyqmMsp00q2RBr/GMBBACsAzAYwx/0+BGAsEM8yWjcS+CHTYf/Dvc3J
        GuzBZxw1jPVzOR0WaHDJXAo0fq0GVbAu0An8iLYCLnW/pfK9zGOOBL8MriCtWCLZWL/inPNVwz4Gc8al
        rF0aVCLc5PiVPqABDeCH0S/rtgaUyFOp9HINaMBKKYs7xuL5JJXmUtcrXCL9sriyFI8uf/10wFwp64sG
        lEjOKfBCA0ok50fwlgaUSM5l8LAGlUhoI7RXgxLYL2W0ZiNELLbCP6WMKxqUi+0AHgX24nU65ZXBywxd
        DVgeR0LVdOAzvvmQ9z0A0zXBmuMB41SxwfO9slKOw7Ocqo7Dvnhtlq0TlkZ6voluSJn9XoiElK0Tznom
        D90uzIJer8SqZN4JbOx7z2C9BvQJvwkXEy9FGXPVzXl95su0E454BXMeTtIAI/Ra/DOAbwBeuZMe6zGx
        1LFxuqlS8XlyJzwIFBDSTk0cItMA3AzU0dd9ADM0MYQmhvQOwExNHDJmnfA1kKg6qUkDYKqbGmsA7NCH
        DpPpcD6Q5Itz0V/HBwU9v3v1WK0BjpROOKNJPvywcTt6wg2p15J8WRMGCL0n6nFdH3rUTYe3mlAFNz7+
        srRKAwYIz/1/XT14kFqmAR5VncCXmsy5QAGliJuyKmLT4bQGxtCNT2niznGeVlpgJ3DOv3Hib46OJPyN
        T6nKdvnBI+ezgGFpeg5gilbegm0Bs1K1VStvAU96asRj8FF3aKGOGRyNq5Tqx7qaoyYUK6DwbxpH8dCS
        cjfH3V3oS93Uzxw1oEL/H4d/0ziKDUtlSSC/qZ85atC0QiPZAaEhGbsf5LBO6QQ2Pnap0cTPHDWg+AFi
        peo+SlZq4meOGpQuc9SgdJmjBqXLHDUoXeaoQekyRw1iyo36xWSOGsSUG/WLyRw1iCk36heTOWoQU27U
        LyZz1CCm3KhfTOaoQUy5Ub+YzOE/RKqJ6qUmZWBo9dhYY07TDZqUgVLq0dHR0dExcvwHmRSnVUNg8wQA
        AAAASUVORK5CYII=
</value>
  </data>
</root>