<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAd
        hQAAHYUB8Bsy7AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARrSURBVHhe7ZrJ
        qxVHFMa/KCqOEBWNShB1E6PoIqD+ARpxJzjEdRQHRASD4EKckqi4NtEExY0oDuAyG8GAU5wWblQCEQNB
        cUBiVEyME9+l+9H38/TtqupX3fdh/+CDx6tTp0717a46dbqBhoaGhoaGhoaGBl/6AZgH4CCAGwCeAnjb
        S6Iv+jwAYC6Aj3TwupkN4KoReCxdBjBLg6iLNQBeGkHG1n8AVmowVbMCwBsjuKrEsb/WoKpiJoB/jaB+
        AbAAwHjtEEh/AJMAfAXgojHeCwDTtVMVnJZAXgFYrUYRWA/gtYx9Ro1iw0VPf4nNahSRb43xv1CjmByR
        wX8HMFCNIjIoGTMbw09qFAs+27rqr1KjCuDjlo2BucIINYrB9zLwYwBD1agChgB4JLFE3xZ5692XQXeq
        UYXskliuqEFvs1wG/B/Ap2pUIROMx7H0YrgUwD1xmqej2rkGGIPGZYlzWqydLVwnT83RzjXAGDSuPN3V
        zhY+F6CvyekCLEkMtXNfF+e0SCdbxDbDUV/Tbp2UK3sMZ31V3mk6qy51HnOLxNhYFGFSxkf2cwBjkjyF
        p8ePAUwDsDCxuQDgS51kHnTwhzFoN+gvAJsCj9rD9B958CyvA9ctprysPA3QYGNw2AigTvHkOVKDjMl1
        I4g6xBS3U4FlOIBlAH5O1oMHSR+Kf19KjsisJDnf/uRvI5iqxVIbFzCLTwD8AOCZ0S9PtN0LYKw6s9DO
        qY4lg+fBthNGP1/xgDVfnScrPPOSMu8b2HdLUfFGO6XqNPmUcUY/X61VpwBGA/jVsA3V+U53gxqnKnMB
        bgNYB+CzoqtvwP38T8NnWd1J8of3UMNUx5MJ5sG2k0a/U0n1JgT+8jFzEl4EJlBtqFEZXSuxd7Nfb972
        eTqXrC89qEGo+J6At28oVR7EvssOrI2hOpR16gnXG9/VPt2lQnYjbrt8+9RCG0PEZGRy+5y84D6vPouU
        XaTzFuNO2p92fmI0+opJRyjM2nx/fUrR9iIxWWpljNYLSB89L9gtimB6qz5dpGi7i1gQbiUi2hBTWqZi
        bq82LlK03UWtx4DbDw8X2hhLMyTw0LEVbXcR7/4Wo4zGWNJE5KFhk1XRmSQPl92Bb7160MZYaktCkk9f
        1CarkMmnFO0O3A570EZfhfLBX4CiR6DoTJJH3lklq7ZHIGQvTvVP1pEnXbEIkjLf/XESobCMpf5cpGi7
        i/ZlHWw0DFy1IevIE9bw1J+LFG13UdvbY371ccswKtJNAIOzjjzhuCGPn6LtRepJhbNM8bwInHyZQ1AK
        zxLqu0hlD0M/Zvq3wWrON0mZ2arE8n9s421f5pfPwnodF1Idq5PS3cFltVdx+5uoQdTNViPQWNqug3cD
        VZXEzgYUaiuDZ5LKi6LdBkvXDFSDLyuW6qfqYN0K7wR+EK2TCBUrwbkvRroVPqes3hYdljqJq/2Obn7m
        XWD1lpUbn2SJttznu26rKwMzRtbwmL//lpzkeHdQ/Jv/Yxs/oXH+lvkdF8bkRZj6X/oAAAAASUVORK5C
        YII=
</value>
  </data>
</root>